package de.fhg.aisec.mark.crypto.base

entity AES isa BlockCipher {
	
	/* 
	 * variables/properties of an AES block cipher
	 * 
	 * these relate to abstract concepts/descriptions from technical specifications such as 
	 * https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf
	 */
	var block_size : uint = 128;
	var key_length : []uint = [128, 192, 256];
	
	var key : SecretKey;
	
	
	/*
	 * invariants that must be true for an instance of an AES block cipher
	 */
	 
	// just naming a variable checks whether it is set
	// i.e. 'key && key.length in key_length' ensures that a key was set before checking that 
	// the length of the key is a valid key length supported by AES
	assert (key && key.length in key_length) onfail IMPROPER_KEY_LENGTH;
	
	
//	op init {
//		
//	}
//	
//	op process {
//		
//	}
//	
//	op done {
//		
//	}
//	
//	op reset {
//		key = nil;
//	}
	
}


rule abs {
	using AES 
	ensure AES.key_length >= 128 
	onfail TEST
}

